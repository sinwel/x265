HEVC CModel version 1.0

config for preprocess        :
;intra_cmd_file = intra_recon_cu_cmd.txt

config for intra        :
;intra_cmd_file = intra_recon_cu_cmd.txt

;================== 4x4 layer ===========================

intra_4_ori_pixel.txt 	;按照16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0]按照y cb y y cr y的顺序打印 

intra_4_ref_pixel.txt		;这个像素已经经过了type判断 按照17个像素一行的顺序打印，打印顺序p[16]p[15]...p[2]p[1]p[0]，其中p[8]为左上角点按照y cb y y cr y的顺序进行打印

intra_4_sad.txt					;按照18个一行的顺序打印，打印顺序0 sad[0], 1 sad[1], 2 sad[2], 4 sad[4], ... 34 sad[34] 按照y cb y y cr y的顺序进行打印

intra_4_cabac_mode_bit.txt	;按照18个一行的顺序打印，按8bit打印，打印顺序[bit34][bit32]...[bit2][bit1][bit0] 按照 y y y y的顺序进行打印

intra_4_ori_pixel_cu_lu.txt	;8x8 CU 按照64个像素一行的顺序打印，打印顺序p[63]p[62]p[61]...p[1]p[0]

intra_4_ori_pixel_cu_cb.txt	;8x8 CU 按照16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0]

intra_4_ori_pixel_cu_cr.txt	;8x8 CU 按照16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0]

intra_4_ref_pixel_cu_lu.txt	;8x8 CU的ref pixel lu像素 33个像素一行 打印顺序p[32]p[31]p[23]...p[1]p[0]

intra_4_ref_pixel_cu_cb.txt	;8x8 CU的ref pixel cb像素 17个像素一行 打印顺序p[16]p[15]p[14]...p[1]p[0]

intra_4_ref_pixel_cu_cr.txt	;8x8 CU的ref pixel cr像素 17个像素一行 打印顺序p[16]p[15]p[14]...p[1]p[0]

intra_4_ref_cu_valid.txt	;8x8 CU的ref cu valid信号 按照5bit一行的顺序打印[4][3][2][1][0]

intra_4_resi_before.txt		;预测出来残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0]; 按照y cb y y cr y的顺序打印

intra_4_resi_after.txt		;经过IT之后的残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0]; 按照y cb y y cr y的顺序打印

intra_4_pred.txt					;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0]; 按照y cb y y cr y 的顺序打印

intra_4_recon.txt					;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0];按照y cb y y cr y 的顺序打印

intra_4_best_mode.txt			;按照8bit一行进行打印。按照y cb y y cr y的顺序打印


;/* 5月20日 */

intra_4_tu_cabac_bits.txt	;按照一个tu 残差，24bit一行的顺序进行打印按照y cb y y cr y的顺序打印

intra_4_pu_pred_mode_bits.txt	;按照8bit一行的数据进行打印 按照y cbcr 的顺序进行打印

intra_4_cu_total_bits.txt		;按照24bit一行的顺序进行打印 一个cu一行

intra_4_cu_total_distortion.txt	;按照32bit一行的顺序进行打印 一个cu一行

intra_4_cu_total_cost.txt ;按照32bit一行的顺序进行打印 一个cu一行

;/* 5月23号 */
intra_4_tu_cost_bits.txt 	;按照一个Y分量的TU的(sad + sad_lambda * bit)打印 打印顺序0 cost[0], 1 cost[1], 2 cost[2], 4 cost[4], ... 34 cost[34] cost按32bit打印

;/* 6月9号 */
intra_4_tu_cbf_bits.txt		;按照 8bit打印 ，y cb y y cr y的顺序打印 一个TU 一行

intra_4_pu_split_flag_bits.txt ;按照8bit打印，一个PU一行

;/* 07-09 add by zxy for print TQ */

intra_4_t_input4x4data		;	
intra_4_qit_output4x4data  	;


;================== 8x8 layer ===========================
intra_8_sad.txt	;按照18个一行的顺序打印，打印顺序0 sad[0], 1 sad[1], 2 sad[2], 4 sad[4], ... 34 sad[34] 按照y cb cr的顺序进行打印

intra_8_cabac_mode_bit.txt ;按照18个一行的顺序打印，按8bit打印，打印顺序[bit34][bit32]...[bit2][bit1][bit0] 按照 y 的顺序进行打印

intra_8_ori_pixel_cu_lu.txt ;8x8 CU 按照64个像素一行的顺序打印，打印顺序p[63]p[62]p[61]...p[1]p[0]

intra_8_ori_pixel_cu_cb.txt ;8x8 CU 按照16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0]

intra_8_ori_pixel_cu_cr.txt ;8x8 CU 按照16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0]

intra_8_ref_pixel_cu_lu.txt ;8x8 CU的ref pixel lu像素 33个像素一行 打印顺序p[32]p[31]p[23]...p[1]p[0]

intra_8_ref_pixel_cu_cb.txt ;8x8 CU的ref pixel cb像素 17个像素一行 打印顺序p[16]p[15]p[14]...p[1]p[0]

intra_8_ref_pixel_cu_cr.txt ;8x8 CU的ref pixel cr像素 17个像素一行 打印顺序p[16]p[15]p[14]...p[1]p[0]

intra_8_ref_cu_valid.txt ;8x8 CU的ref cu valid信号 按照5bit一行的顺序打印[4][3][2][1][0]

intra_8_resi_before.txt ;预测出来残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0];按照y cb cr的顺序打印

intra_8_resi_after.txt	;经过IT之后的残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0];按照y cb cr的顺序打印

intra_8_pred.txt				;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0];按照y cb cr的顺序打印

intra_8_recon.txt							;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0];按照y cb cr的顺序打印

intra_8_best_mode.txt					;按照8bit一行进行打印。按照y cb cr的顺序打印

intra_8_tu_cabac_bits.txt			;按照一个tu 残差 24bit一行的顺序进行打印 按照y cb cr 的顺序打印

intra_8_pu_pred_mode_bits.txt	;按照8bit一行的数据进行打印 按照y cbcr的顺序进行打印

intra_8_cu_total_bits.txt			;按照24bit一行的顺序进行打印一个cu一行

intra_8_cu_total_distortion.txt	;按照32bit一行的顺序进行打印一个cu一行

intra_8_cu_total_cost.txt			;按照32bit一行的顺序进行打印 一个cu一行

intra_8_tu_cost_bits.txt			;按照一个Y分量的TU的(sad + sad_lambda * bit)打印 打印顺序0 cost[0], 1 cost[1], 2 cost[2], 4 cost[4], ... 34 cost[34] cost按32bit打印

;/* 6月9号 */
intra_8_tu_cbf_bits.txt				;按照 8bit打印 ，y cb cr的顺序打印一个TU 一行

intra_8_pu_split_flag_bits.txt		;按照8bit打印，一个PU一行

;/* 6月12号 */
intra_8_ref_pixel_cu_lu_filter.txt	;8x8 CU的ref pixel lu像素 filter后像素 33个像素一行 打印顺序p[32]p[31]p[23]...p[1]p[0]

;================== 16x16 layer ===========================
intra_16_sad.txt				;按照35个一行的顺序打印，打印顺序0 sad[0], 1 sad[1], 2 sad[2], 3 sad[2] 4 sad[4], ... 34 sad[34] 按照y的顺序进行打印

intra_16_cabac_mode_bit.txt		;按照35个一行的顺序打印，按8bit打印，打印顺序[bit34][bit33][bit32]...[bit2][bit1][bit0] 按照 y 的顺序进行打印

intra_16_ori_pixel_cu_lu.txt	;16x16 CU 按照16 x 16个像素一行的顺序打印，打印顺序p[15]p[14]p[13]...p[1]p[0] 
intra_16_ori_pixel_cu_cb.txt	;16x16 CU 按照8 x 8个像素一行的顺序打印，打印顺序p[7]p[6]p[5]...p[1]p[0]
intra_16_ori_pixel_cu_cr.txt	;16x16 CU 按照8 x 8个像素一行的顺序打印，打印顺序p[7]p[6]p[5]...p[1]p[0]
intra_16_ref_pixel_cu_lu.txt	;16x16 CU的ref pixel lu像素 65个像素一行 打印顺序p[64]p[63]p[62]...p[1]p[0]
intra_16_ref_pixel_cu_cb.txt	;16x16 CU的ref pixel cb像素 33个像素一行 打印顺序p[32]p[31]p[30]...p[1]p[0]
intra_16_ref_pixel_cu_cr.txt	;16x16 CU的ref pixel cr像素 33个像素一行 打印顺序p[32]p[31]p[30]...p[1]p[0]

intra_16_ref_cu_valid.txt		;16x16 CU的ref cu valid信号 按照9bit一行的顺序打印[8][7][6][5][4][3][2][1][0]

intra_16_resi_before.txt		;预测出来残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0]; cb两行拼成1行 cr两行拼成1行按照y cb cr的顺序打印

intra_16_resi_after.txt			;经过IT之后的残差像素 按照16个像素一行的顺序打印，每个像素位宽为16bit，打印顺序p[15]p[14]p[13]...p[1]p[0]; cb两行拼成1行 cr两行拼成1行 按照y cb cr的顺序打印

intra_16_pred.txt				;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0]; cb两行拼成1行 cr两行拼成1行 按照y cb cr的顺序打印

intra_16_recon.txt				;按照16个像素一行的顺序打印，每个像素位宽为8bit，打印顺序p[15],p[14],p[13]...p[1],p[0]; cb两行拼成1行 cr两行拼成1行 按照y cb cr的顺序打印

intra_16_best_mode.txt			; 按照8bit一行进行打印。按照y cb cr的顺序打印

intra_16_tu_cabac_bits.txt		; 按照一个tu 24bit一行的顺序进行打印 按照y cb cr 的顺序打印

intra_16_pu_pred_mode_bits.txt	;按照8bit一行的数据进行打印 按照y cb cr的顺序进行打印

intra_16_cu_total_bits.txt		;按照24bit一行的顺序进行打印 一个cu一行

intra_16_cu_total_distortion.txt	;按照32bit一行的顺序进行打印 一个cu一行

intra_16_cu_total_cost.txt			;按照32bit一行的顺序进行打印 一个cu一行

intra_16_tu_cost_bits.txt			;按照一个Y分量的TU的(sad + sad_lambda * bit)打印 打印顺序0 cost[0], 1 cost[1], 2 cost[2], 3 cost[3], ... 34 cost[34] cost按32bit打印

;/* 6月23号 */
intra_16_tu_cbf_bits.txt			;按照 24bit,其中 6bit 整数 + 16比特小数 打印 ，y cb y y cr y的顺序打印 一个TU 一行

intra_16_pu_split_flag_bits.txt		;按照24bit,其中 6bit 整数 + 16比特小数 打印，一个PU一行

;/* 6月24号 */
intra_16_ref_pixel_cu_lu_filter.txt ; 16x16 CU的ref pixel lu像素 经过滤波后的lu ref像素 65个像素一行 打印顺序p[64]p[63]p[62]...p[1]p[0]

;intra_16_ref_pixel_cu_cb_filter.txt ; 16x16 CU的ref pixel cb像素 经过滤波后的cb ref像素 33个像素一行 打印顺序p[32]p[31]p[30]...p[1]p[0]

;intra_16_ref_pixel_cu_cr_filter.txt ; 16x16 CU的ref pixel cr像素 经过滤波后的cr ref像素 33个像素一行 打印顺序p[32]p[31]p[30]...p[1]p[0]


config for ime        :
;mc_cmd_file = prefetch_cache_prefcmd.dat

config for fme        :
;mc_cmd_file = prefetch_cache_prefcmd.dat

config for qt        :
;wp table l0 = mc_wp_tab_l0.dat

config for dblk   :
;wp table l0 = mc_wp_tab_l0.dat

config for sao   :
;loopfilt_cmd_fifo = loopfilt_cmd_fifo.data

config for ctu_calc :
;str2dec = rlc_in.dat
